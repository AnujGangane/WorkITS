// <auto-generated />
using Clinic_WebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinic_WebApp.Migrations
{
    [DbContext(typeof(ClinicDbContext))]
    [Migration("20250109061410_ClinicBookAppDb5")]
    partial class ClinicBookAppDb5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clinic_WebApp.Models.BookAppoitment", b =>
                {
                    b.Property<int>("patientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("patientID"));

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<string>("pdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pmsg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("patientID");

                    b.HasIndex("DoctorID");

                    b.ToTable("BookAppoitments");
                });

            modelBuilder.Entity("Clinic_WebApp.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorID"));

                    b.Property<string>("dname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dspeciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoctorID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Clinic_WebApp.Models.BookAppoitment", b =>
                {
                    b.HasOne("Clinic_WebApp.Models.Doctor", "Doctor")
                        .WithMany("BookAppoitments")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("Clinic_WebApp.Models.Doctor", b =>
                {
                    b.Navigation("BookAppoitments");
                });
#pragma warning restore 612, 618
        }
    }
}
